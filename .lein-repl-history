(require '[aws.sdk.s3 :as s3] :reload)
(def creds {:access-key "abc" :secret-key "123"})

(s3/set-endpoint! creds "http://192.168.14.25:3333")
(s3/list-buckets creds)
(s3/create-bucket creds "droplocally2-dev")
(s3/list-buckets creds)

(use '[aws.sdk.s3])
(def cred {:access-key "abc"})
(def cred {:access-key "abc" :secret-key "123"})
(set-endpoint! cred)
(set-endpoint! cred "http://192.168.14.25:3333")
(list-buckets cred)
(def client (s3-client cred))
(.setClientOptions client nil)
(.setClientOptions client)
(.setS3ClientOptions client)
(put-object cred "droplocally2-dev" "abs" "test content")
(put-object cred "droplocally2-dev" "abs" 1)
(put-object cred "droplocally2-dev" "abs" "abc")
(put-object cred "droplocally2-dev" "1234" "")
(put-object cred "droplocally2-dev" "1234" "1234")
(.getBytes "ssssssssss")
(count (.getBytes "ssssssssss"))
(class "ABC")
(put-object cred "droplocally2-dev" "1234" "1234")
client
(.listBuckets client)
(.putObject client "droplocally2-dev", "abc", "123")
clojure.java.io/file "http://asdf.com")
(clojure.java.io/file "http://asdf.com")
(def test-file (clojure.java.io/file "http://asdf.com"))
(.putObject client "droplocally2-dev", "abc", test-file)
(def test-file (clojure.java.io/file ".lein-history"))
test-file
(.putObject client "droplocally2-dev", "abc", test-file)
(def test-file (clojure.java.io/file. ".lein-history"))
(java.io.File ".lein-history")
(java.File ".lein-history")
(clojure.java.io.File ".lein-history")
(clojure.java.io.File. ".lein-history")
(java.io.File. ".lein-history")
(def test-file (java.io.File. ".lein-history"))
(.putObject client "droplocally2-dev", "abc", test-file)
(.getSize test-file)
(.read test-file)
(.readString test-file)
(.exists test-file)
(def test-file (java.io.File. "http://httpbin.org/ip"))
(.exists test-file)
(def test-file (java.io.File. "/Users/timosulg/system.gems"))
(.exists test-file)
(.putObject client "droplocally2-dev", "abc", test-file)
(.canRead test-file)
client
(import 'com.amazonaws.services.s3.S3ClientOptions)
S3ClientOptions
(S3ClientOptions. )
(def opt (S3ClientOptions. ))
(.isPathStyleAccess opt)
(.setPathStyleAccess opt true)
(.isPathStyleAccess opt)
(.setS3ClientOptions client opt)
(.putObject client "droplocally2-dev", "abc", test-file)
(put-object cred "abc" "abc" "abc") 
(put-object cred "droplocally2-dev" "abc" "abc") 
(put-object cred "droplocally2" "abc" "abc") 
(put-object cred "droplocally2-dev" "abc" "abc") 
(put-object cred "droplocally2-dev" "abc" test-file) 
