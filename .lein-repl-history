(require '[aws.sdk.s3 :as s3])
(.setEndPoint s3/s3-client*)
(require '[aws.sdk.s3 :as s3] :reload)
(.getEndPoint s3/s3-client)
(.getEndPoint s3/s3-client*)
s3/s3-client
(s3/s3-client)
(s3/s3-client nil)
(s3/s3-client creds)
(def creds {:access-key "123" :secret-key "123"}
)
creds
(s3/s3-client creds)
(def client (s3/s3-client creds))
(.getEndPoint client)
(.getDomain client)
(.bean client)
client
(.endPoint client)
(.getEndPoint client)
(. getEndPoint client)
(. getEndpoint client)
(.getEndpoint client)
(.Endpoint client)
(.setEndpoint client)
(.getBucketLocation client "avc")
(.getBucketWebsiteConfiguration client "avc")
(.getS3ClientOptions client)
(.S3ClientOptions client)
(.setEndpoint client "http://127.0.0.1:4567")
(.getBucketWebsiteConfiguration client "avc")
(require '[aws.sdk.s3 :as s3])
(def client s3-client)
(def client (s3/s3-client))
(def client (s3/s3-client creds))
(def creds {:access-key "abc" :secret-key "123"})
(def client (s3/s3-client creds))
(.setEndpoint client "127.0.0.1")
(.createBucket client "aws-client")
(.setEndpoint client "127.0.0.1:4567")
(.createBucket client "aws-client")
(.setEndpoint client "127.0.0.1:4567")
(.setEndpoint client "http://127.0.0.1:4567")
(.createBucket client "aws-client")
(.setEndpoint client "http://127.0.0.1:4567")
(.listBuckets client)
(.addBuckets client "aws-test")
(.createBuckets client "aws-test")
(.createBucket client "aws-test")
eBucket client "aws-test")
(.doesBucketExists client "aws-test")
(.doesBucketExist client "aws-test")
(.getProtocol client)
(.clientConfigurations client)
(.clientConfiguration client)
(.getClientConfiguration client)
(.isPathStyleAccess client)
(client/isPathStyleAccess)
(.setPathStyleAccess client true)
(.setPathStyleAccess client)
(.setS3ClientOptions client)
(.setS3ClientOptions client (S3ClientOptions. ""))
(import '[com.amazonaws.services.s3 S3ClientOptions])
(import '[com.amazonaws.services.s3])
(S3ClientOptions.)
(import '[com.amazonaws.services.s3])
S3ClientOption
S3ClientOptions
(s3/S3ClientOptions.)
s3/S3ClientOptions.
s3/S3ClientOptions
S3ClientOptions
com.amazonaws.services.s3.S3ClientOptions
com.amazonaws.services.s3/S3ClientOptions
com.amazonaws.services.s3
(import 'com.amazonaws.services.s3)
(import 'com.amazonaws.services.s3.S3ClientOptions)
(client)
(import com.amazoneaws.ClientConfiguration)
(import com.amazonaws.ClientConfiguration)
(import com.amazonaws.services.s3.S3ClientOptions)
(import com.amazonaws.services.S3ClientOptions)
(import com.amazonaws.services.s3)
(import com.amazonaws.services.s3.S3Client)
(import com.amazonaws.services.s3.AmazonS3Client)
(import com.amazonaws.services.s3.S3ClientOption)
(import com.amazonaws.services.s3.S3ClientOptions)
(.createBucket client "aws")
(.listBuckets client)
(.isPathStyleAccess client)
(.listBuckets client)
(.isPathAccessStyle client)
client
(keys client)
(client)
(.isPathAccessStyle client)
(.listBuckets client)
(.createBucket client "aws")
(.setEndpoint  client "192.168.14.25")
(.createBucket client "aws")
(.setEndpoint  client "192.168.14.25:3333")
(.listBuckets client)
(.setEndpoint  client "http://192.168.14.25:3333")
(.listBuckets client)
(.createBucket client "AWS")
(.createBucket client "s3-test")
com.amazonaws.services.s3.S3ClientOptions
(import com.amazonaws.services.s3.S3ClientOptions)
(import 'com.amazonaws.services.s3.S3ClientOptions)
(import '[com.amazonaws.services.s3.S3ClientOptions])
(import '[com.amazonaws.services.s3])
(import 'com.amazonaws.services.s3)
(import 'com.amazonaws.services.s3.AmazonS3Client)
(import 'com.amazonaws.services.s3.AmazonS3ClientOptions)
(import 'com.amazonaws.services.s3.S3ClientOptions)
w
(require '[aws.sdk.s3 as s3])
(require '[aws.sdk.s3 :as s3])
(def client (s3/s3-client creds))
(def creds {:access-key "abc" :secret-key "123"})
(def client (s3/s3-client creds))
(.getEndpoint client)
(.setEndpoint client "http://127.0.0.1:4567")
(.listBuckets client)
(.createBucket client "aws-test", "region-name")
(.createBucket client "aws_test")
(.createBucket client "awstest")
(.listBuckets client)
(count (.listBuckets client))
(first (.listBuckets client))
(.createBucket client "droplocally-test", "")
(.createBucket client "droplocally-test", nil)
(.createBucket client "droplocally-test", "local")
(.setEndpoint client "http://192.168.14.25:3333")
(.listBuckets client)
(.createBucket client "droplocally-test")
:w
(.getEndpoint client) 
(.Endpoint client) 
:w
(require '[aws.sdk.s3 :as s3])
(s3/set-endpoint! creds "https://192.168.14.25")
(require '[aws.sdk.s3 :as s3] :reload)
(s3/set-endpoint! creds "https://192.168.14.25")
(s3/list-buckets creds)
(s3/set-endpoint! creds "https://192.168.14.25:3333")
(s3/list-buckets creds)
(s3/set-endpoint! creds "http://192.168.14.25:3333")
(s3/list-buckets creds)
(s3/create-bucket creds "droplocally2-dev")
(require '[aws.sdk.s3 :as s3] :reload)
(s3/set-endpoint! creds "http://192.168.14.25:3333")
(s3/list-buckets creds)
